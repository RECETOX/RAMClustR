if(!grepl("LC-MS", plat ) & !grepl("GC-MS", plat ) ) {
if(grepl('[Gg]',  substring(plat,1,1))) {
instrument<-"GC-MS"
}
if(grepl('[Ll]',  substring(plat,1,1))) {
instrument<-"LC-MS"
}
}
if(is.null(instrument)) {
stop("do not regonize instrument platform, please use either 'GC-MS' or 'LC-MS' " )
}
rowstart<-grep(instrument, csv.in[,1])+1
rowend<-grep("MSlevs", csv.in[,1])
rowend<-rowend[which(rowend > rowstart)]
rowend
if(length(rowend)>1) {
rowend<-rowend[which.min((rowend - rowstart))]
}
instrument <- data.frame('value' = csv.in[rowstart:rowend,2], row.names = csv.in[rowstart:rowend,1])
instrument
ExpDes <- list("design" = design, "instrument" = instrument)
ExpDes
if(!force.skip) {
csv <- TRUE
}
if (is.logical(csv)) {
if(csv) {
out<-read.csv(paste(find.package("RAMClustR"), "/params/params.csv", sep=""), header=TRUE, check.names=FALSE, stringsAsFactors = FALSE)
if(!force.skip) {
write.csv(out, file=paste(getwd(), "/ExpDes.csv", sep=""), row.names=FALSE)
readline(prompt=cat("A file called ExpDes.csv has been written to your working directorty:",
'\n', '\n',
getwd(),
'\n', '\n',
"please replace platform appropriate 'fill' cells with instrument and experiment",
'\n', "data and save file.  When complete, press [enter] to continue"
))
csv.in<-read.csv(file=paste(getwd(), "/ExpDes.csv", sep=""), header=TRUE, check.names=FALSE, stringsAsFactors = FALSE)
} else {
csv.in <-out
csv.in[7,2]<-'LC-MS'
csv.in[which(csv.in[,1]=="MSlevs"),2]<-1
}
design<-data.frame("value" = csv.in[3:7,2], row.names = csv.in[3:7,1])
instrument <- NULL
plat<-as.character(design[5,1])
if(grepl("LC-MS", plat)) {
instrument<-"LC-MS"
}
if( grepl("GC-MS", plat )) {
instrument<-"GC-MS"
}
if(!grepl("LC-MS", plat ) & !grepl("GC-MS", plat ) ) {
if(grepl('[Gg]',  substring(plat,1,1))) {
instrument<-"GC-MS"
}
if(grepl('[Ll]',  substring(plat,1,1))) {
instrument<-"LC-MS"
}
}
if(is.null(instrument)) {
stop("do not regonize instrument platform, please use either 'GC-MS' or 'LC-MS' " )
}
rowstart<-grep(instrument, csv.in[,1])+1
rowend<-grep("MSlevs", csv.in[,1])
rowend<-rowend[which(rowend > rowstart)]
if(length(rowend)>1) {
rowend<-rowend[which.min((rowend - rowstart))]
}
instrument <- data.frame('value' = csv.in[rowstart:rowend,2], row.names = csv.in[rowstart:rowend,1])
ExpDes <- list("design" = design, "instrument" = instrument)
}  else {
suppressWarnings( design<-edit(Experiment))
plat<-as.character(design[5,1])
if(grepl("LC-MS", plat)) {
instrument<-"LC-MS"
}
if( grepl("GC-MS", plat )) {
instrument<-"GC-MS"
}
if(!grepl("LC-MS", plat ) & !grepl("GC-MS", plat ) ) {
if(grepl('[Gg]',  substring(plat,1,1))) {
instrument<-"GC-MS"
}
if(grepl('[Ll]',  substring(plat,1,1))) {
instrument<-"LC-MS"
}
}
if(is.null(instrument)) {
stop("do not regonize instrument platform, please use either 'GC-MS' or 'LC-MS' " )
}
if(instrument == "LC-MS") platform<-LCMS
if(instrument == "GC-MS") platform<-GCMS
instrument <- platform
suppressWarnings( instrument<-edit(instrument))
instrument <- data.frame('value' = csv.in[rowstart:rowend,2], row.names = csv.in[rowstart:rowend,1])
ExpDes<-list("design" = design, "instrument" = instrument)
}
} else  {
if(file.exists(csv)) {
csv.in <- read.csv(csv, header=TRUE, check.names=FALSE)
design<-data.frame("value" = csv.in[3:7,2], row.names = csv.in[3:7,1])
instrument <- NULL
plat<-as.character(design[5,1])
if(grepl("LC-MS", plat)) {
instrument<-"LC-MS"
}
if( grepl("GC-MS", plat )) {
instrument<-"GC-MS"
}
if(!grepl("LC-MS", plat ) & !grepl("GC-MS", plat ) ) {
if(grepl('[Gg]',  substring(plat,1,1))) {
instrument<-"GC-MS"
}
if(grepl('[Ll]',  substring(plat,1,1))) {
instrument<-"LC-MS"
}
}
if(is.null(instrument)) {
stop("do not regonize instrument platform, please use either 'GC-MS' or 'LC-MS' " )
}
rowstart<-grep(instrument, csv.in[,1])+1
rowend<-grep("MSlevs", csv.in[,1])
rowend<-rowend[which(rowend > rowstart)]
if(length(rowend)>1) {
rowend<-rowend[which.min((rowend - rowstart))]
}
instrument <- data.frame('value' = csv.in[rowstart:rowend,2], row.names = csv.in[rowstart:rowend,1])
ExpDes <- list("design" = design, "instrument" = instrument)
}
}
ExpDes
source('~/GitHub/RAMClustR/R/Params.R')
source('~/GitHub/RAMClustR/R/do.findmain.R', encoding = 'UTF-8')
roxygen2::roxygenise()
source('~/GitHub/RAMClustR/R/Params.R')
experiment <- defineExperiment(csv = TRUE) # experiment <- defineExperiment(force.skip = TRUE)
experiment
experiment
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
Experiment[[2]]
Experiment[[1]]
experiment[[1]]
experiment[[2]]
mslev
cat(experiment[[1]])
print(experiment[[1]])
print(experiment[[2]])
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
RC
getwd()
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
experiment[[1]][5,1]
exeriment[[2]]
experiment[[2]]
experiment[[2]][nrow(experiment),1]
experiment[[2]][length(experiment),1]
experiment[[2]][length(experiment)]
experiment[[2]]
nrow(experiment[[2]])
experiment[[2]][nrow(experiment[[2]]),1]
as.numeric(as.integer(experiment[[2]][nrow(experiment[[2]]),1]))
as.numeric(as.integer(experiment[[2]][nrow(experiment[[2]]),1]))
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
experiment
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
any(row.names(experiment[[2]])=="colgas"))
any(row.names(experiment[[2]])=="colgas")
(any(row.names(ExpDes[[2]])=="conevolt"))
ExpDes
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
specdat<-""
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC <- ramclustR(xcmsObj = xset, ExpDes=experiment)
round(123, digits = 3)
round(123.0005, digits = 3)
round(123.0003, digits = 3)
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
roxygen2::roxygenise()
devtools::use_vignette("RAMClustR") #doesn't seemt to work without 'latexpdf'
write.csv(RC$SpecAbund, file="SpecAbund.csv", row.names=TRUE)
outcsv<-RC$MSdata
outcsv[1:10,1:10]
outcsv1<-RC$MSdata
outcsv2<-absval(jitter(outcsv1))
outcsv2<-abs(jitter(outcsv1))
outcsv1<-RC$MSdata
outcsv2<-abs(jitter(outcsv1))
write.csv(outcsv1, file = "msdata.csv", row.names = TRUE)
write.csv(outcsv2, file = "msmsdata.csv", row.names = TRUE)
RC1 <- ramclustR(ms = "msdata.csv", featdelim = "_", timepos = 2, st = 5, ExpDes=experiment)
getwd()
RC$MSdata
outcsv1<-RC$MSdata
outcsv2<-abs(jitter(outcsv1))
write.csv(outcsv1, file = "msdata.csv", row.names = TRUE)
getwd()
outcsv1[1:10,1:10]
outcsv2[1:10,1:10]
write.csv(outcsv1, file = "msdata.csv", row.names = TRUE)
?jitter
outcsv1<-RC$MSdata
outcsv2<-abs(jitter(outcsv1, factor = 0.1))
write.csv(outcsv1, file = paste0(getwd(), "msdata.csv"), row.names = TRUE)
getwd()
setwd('..')
write.csv(outcsv1, file = paste0(getwd(), "/msdata.csv"), row.names = TRUE)
paste0(getwd(), "/msdata.csv")
getwd()
setwd("RAMClustR")
paste0(getwd(), "/msdata.csv")
write.csv(outcsv1, file = paste0(getwd(), "/msdata.csv"), row.names = TRUE)
getwd()
write.csv(outcsv1, file = paste0(getwd(), "/msdata.csv"), row.names = TRUE)
write.csv(outcsv2, file = paste0(getwd(), "/msmsdata.csv"), row.names = TRUE)
RC1 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"), featdelim = "_", timepos = 2, st = 5, ExpDes=experiment)
getwd()
outcsv1[1:10,1:10]
args(ramclustR)
read.csv(paste0(getwd(), "/msdata.csv"), header=TRUE, check.names=FALSE)
getwd()
paste0(getwd(), "/msdata.csv")
outcsv1<-RC$MSdata
outcsv2<-abs(jitter(outcsv1, factor = 0.1))
write.csv(outcsv1, file = paste0(getwd(), "/msdata.csv"), row.names = TRUE)
write.csv(outcsv2, file = paste0(getwd(), "/msmsdata.csv"), row.names = TRUE)
paste0(getwd(), "/msdata.csv")
getwd()
outcsv1<-RC$MSdata
outcsv2<-abs(jitter(outcsv1, factor = 0.1))
write.csv(outcsv1, file = paste0(getwd(), "/msdata.csv"), row.names = TRUE)
write.csv(outcsv2, file = paste0(getwd(), "/msmsdata.csv"), row.names = TRUE)
paste0(getwd(), "/msdata.csv")
paste0(getwd(), "/msdata.csv")
read.csv(file=paste0(getwd(), "/msdata.csv"), header=TRUE, check.names=FALSE)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC1 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"), featdelim = "_", st = 5, ExpDes=experiment)
RC1 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"), featdelim = "_", st = 5, ExpDes=experiment)
d<-read.csv(file=paste0(getwd(), "/msdata.csv"), header=TRUE, check.names=FALSE)
d[1,1]
d[2,2]
is.nummeric(d[2,2])
is.numeric(d[2,2])
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC1 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"), featdelim = "_", st = 5, ExpDes=experiment, sampNameCol = 1)
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
experiment[[2]]
experiment[[2]]
experiment[[2]]$MSlevs
MSlevs
names(experiment[[2]])
row.names(experiment[[2]])
experiment[[2]][which(row.names(experiment[[2]])=="MSlevs"),1]
experiment[[2]][which(row.names(experiment[[2]])=="MSlevs"),1]<-2
experiment[[2]][which(row.names(experiment[[2]])=="MSlevs"),1]
experiment[[2]][which(row.names(experiment[[2]])=="MSlevs"),1, stringsAsFactors = FALSE]<-2
exeriment[[2]]<-edit(experiment[[2]])
experiment[[2]]<-edit(experiment[[2]])
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
?ramclustR
d<-read.csv(file=paste0(getwd(), "/msmsdata.csv"), header=TRUE, check.names=FALSE)
d[1:10,1:10]
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
experiment[[2]]
mslev
as.integer(as.numeric(experiment[[2]][nrow(experiment[[2]]),1]))
as.numeric(experiment[[2]][nrow(experiment[[2]]),1])
as.integer(as.numeric(as.character(experiment[[2]][nrow(experiment[[2]]),1])))
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC$cmpd
RC$SpecAbund[1:6,1:6]
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC$SpecAbund[1:10,1:10]
RC$SpecAbund[1:10,1:10]
RC$cmpd[1:10]
source('~/GitHub/RAMClustR/R/ramclustR.R')
dimnames(RC$SpecAbund[[2]])
dimnames(RC$SpecAbund[[1]])
names(RC$SpecAbund)
colnames(RC$SpecAbund)
is.matrix(RC$SpecAbund)
dimnames(ramclustObj$SpecAbund)
dimnames(RC$SpecAbund)
dimnames(RC$SpecAbund[[2]])
dimnames(RC$SpecAbund)
dimnames(ramclustObj$SpecAbund)[[2]]
dimnames(RC$SpecAbund)[[2]]
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
dimnames(RC$SpecAbund)[[2]]
source('~/GitHub/RAMClustR/R/ramclustR.R')
print(ramclustObj$cmpd[1:10,], '\n')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
dimnames(RC$SpecAbund)[[2]]
source('~/GitHub/RAMClustR/R/ramclustR.R')
dimnames(RC$SpecAbund)[[2]]
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
dimnames(RC2$SpecAbund)[[2]]
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
RC2 <- ramclustR(ms = paste0(getwd(), "/msdata.csv"),
idmsms = paste0(getwd(), "/msmsdata.csv"),
featdelim = "_",
timepos = 2,
st = 5,
ExpDes=experiment,
sampNameCol = 1)
?do.findmain
cat(dimnames(ramclustObj$SpecAbund)[[2]][1:10], '\n')
RC <- do.findmain(RC, mode = "positive", mzabs.error = 0.02, ppm.error = 10)
RC$M
plot(RC$clrt, RC$M, xlab= "retention time", ylab = "M")
plot(RC$clrt, RC$M, xlab= "retention time", ylab = "M", bty = "L", pch = 19)
fit<-lm(RC$M~RC$rt)
fit<-lm(RC$M~RC$clrt)
fit
aov(fit)
anova(fit)
fit<-lm(RC$M~RC$clrt)
plot(RC$clrt, RC$M, xlab= "retention time", ylab = "M", bty = "L", pch = 19)
abline(fit)
roxygen2::roxygenise()
detach("package:RAMClustR")
devtools::install_github("cbroeckl/RAMClustR", build_vignettes = TRUE, dependencies = TRUE)
source('~/GitHub/RAMClustR/R/do.findmain.R', encoding = 'UTF-8')
source('~/GitHub/RAMClustR/R/do.findmain.R', encoding = 'UTF-8')
source('~/GitHub/RAMClustR/R/do.findmain.R', encoding = 'UTF-8')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/Params.R')
source('~/GitHub/RAMClustR/R/ramclustR.R')
source('~/GitHub/RAMClustR/R/do.findmain.R', encoding = 'UTF-8')
source('~/GitHub/RAMClustR/R/do.findmain.R', encoding = 'UTF-8')
roxygen2::roxygenise()
source('~/GitHub/RAMClustR/R/ramclustR.R')
roxygen2::roxygenise()
