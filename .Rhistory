"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in tar) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
out
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
cat("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in tar) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
{
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
if(is.null(mz)) {stop("must set 'mz'", '\n')}
if(is.null(mztol)) {stop("must set 'mztol'", '\n')}
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
cat("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in tar) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
out
tar
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
cat("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
out
which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
posrange
ramclustObj$msint[87]
ramclustObj$msint[86]
ramclustObj$msint[86:87]
ramclustObj$fmz[86:87]
mz
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
tar
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
m.check
i
check1<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
check1
(abs(ramclustObj$fmz - mz - 1.0078) <= mztol)
mztol
abs(ramclustObj$fmz - mz - 1.0078)
mz
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
check1
(ramclustObj$fmz - mz + 1.0078)
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
res1
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
{
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
out
if(is.null(mz)) {stop("must set 'mz'", '\n')}
if(is.null(mztol)) {stop("must set 'mztol'", '\n')}
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
cat("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
findmass<-function(
ramclustObj = RC,
mz = NULL,
mztol = 0.02,
rttol = 1.5,
m.check = TRUE
) {
if(is.null(mz)) {stop("must set 'mz'", '\n')}
if(is.null(mztol)) {stop("must set 'mztol'", '\n')}
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
cat("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
}
out
#' findmass
#'
#' see if any features match a given mass, and whether they are plausibly M0
#' @param ramclustObj - the ramclustR object to explore
#' @param mz - numeric mz value to search for
#' @param mztol - absolute mass tolerance around mz
#' @param rttol - when examining isotope patterns, feaure retention time tolerance around features matching mz +- mztol
#' @param m.check - logical - check whether the matching masses are plausibly M0.  Looks for ions above and below the target m/z at the same time that have intensities consistent with target ion being a non-M0 isotope.
#'#' @export
findmass<-function(
ramclustObj = RC,
mz = NULL,
mztol = 0.02,
rttol = 2,
m.check = TRUE
) {
if(is.null(mz)) {stop("must set 'mz'", '\n')}
if(is.null(mztol)) {stop("must set 'mztol'", '\n')}
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
cat("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
}
#' findmass
#'
#' see if any features match a given mass, and whether they are plausibly M0
#' @param ramclustObj - the ramclustR object to explore
#' @param mz - numeric mz value to search for
#' @param mztol - absolute mass tolerance around mz
#' @param rttol - when examining isotope patterns, feaure retention time tolerance around features matching mz +- mztol
#' @param m.check - logical - check whether the matching masses are plausibly M0.  Looks for ions above and below the target m/z at the same time that have intensities consistent with target ion being a non-M0 isotope.
#'#' @export
findmass<-function(
ramclustObj = RC,
mz = NULL,
mztol = 0.02,
rttol = 2,
m.check = TRUE
) {
if(is.null(mz)) {stop("must set 'mz'", '\n')}
if(is.null(mztol)) {stop("must set 'mztol'", '\n')}
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
stop("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
cat(out)
}
mz
findmass(mz = 591.2811)
#' findmass
#'
#' see if any features match a given mass, and whether they are plausibly M0
#' @param ramclustObj - the ramclustR object to explore
#' @param mz - numeric mz value to search for
#' @param mztol - absolute mass tolerance around mz
#' @param rttol - when examining isotope patterns, feaure retention time tolerance around features matching mz +- mztol
#' @param m.check - logical - check whether the matching masses are plausibly M0.  Looks for ions above and below the target m/z at the same time that have intensities consistent with target ion being a non-M0 isotope.
#'#' @export
findmass<-function(
ramclustObj = RC,
mz = NULL,
mztol = 0.02,
rttol = 2,
m.check = TRUE
) {
if(is.null(mz)) {stop("must set 'mz'", '\n')}
if(is.null(mztol)) {stop("must set 'mztol'", '\n')}
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
stop("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,1.5)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 14 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
print(out)
}
findmass(mz = 591.2811)
#' findmass
#'
#' see if any features match a given mass, and whether they are plausibly M0
#' @param ramclustObj - the ramclustR object to explore
#' @param mz - numeric mz value to search for
#' @param mztol - absolute mass tolerance around mz
#' @param rttol - when examining isotope patterns, feaure retention time tolerance around features matching mz +- mztol
#' @param m.check - logical - check whether the matching masses are plausibly M0.  Looks for ions above and below the target m/z at the same time that have intensities consistent with target ion being a non-M0 isotope.
#' @return returns a table to the console listing masses which match, their retention time and intensity, and whether it appears to be plausible as M0
#'#' @export
findmass<-function(
ramclustObj = RC,
mz = NULL,
mztol = 0.02,
rttol = 2,
m.check = TRUE
) {
if(is.null(mz)) {stop("must set 'mz'", '\n')}
if(is.null(mztol)) {stop("must set 'mztol'", '\n')}
tar<-which(abs(ramclustObj$fmz - mz) <= mztol)
if(length (tar)==0) {
stop("no masses found within", mztol, "mz units of", mz, '\n')
} else {
out<-data.frame("featn" = tar,
"featclus" = ramclustObj$featclus[tar],
"mz" = ramclustObj$fmz[tar],
"rt" = ramclustObj$frt[tar],
"int" = ramclustObj$msint[tar],
"M0_plausible" = rep(NA, length(tar))
)
if(m.check) {
for(i in 1:length(tar)) {
## check to see if there is a signal at mz - proton mass with intensity inconsistent with mz  M0 isotope
check1<-which((abs(ramclustObj$fmz - mz + 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
negrange <- c(0.5,2)* (ramclustObj$msint[tar[i]]  / ((ramclustObj$fmz[tar[i]] / 17 ) * 0.011))
res1<-any(ramclustObj$msint[check1] > negrange[1] & ramclustObj$msint[check1] < negrange[2] )
} else {res1 <- FALSE}
## check to see if there is a signal at mz + proton mass with intensity inconsistent with mz  M0 isotope
check2<-which((abs(ramclustObj$fmz - mz - 1.0078) <= mztol) & (abs(ramclustObj$frt - ramclustObj$frt[tar[i]]) <= rttol ))
if(length(check1)>0) {
posrange <- c(0.5,2)* (ramclustObj$msint[tar[i]]  * ((ramclustObj$fmz[tar[i]] / 17 ) * 0.011))
res2<-any(ramclustObj$msint[check2] > negrange[1] & ramclustObj$msint[check2] < negrange[2] )
} else {res2 <- FALSE}
out[i, "M0_plausible"]<-!any(c(res1, res2))
}
}
}
print(out)
}
findmass(mz = 591.2811)
roxygen2::roxygenise()
roxygen2::roxygenise()
install_github("cbroeckl/RAMClustR", build_vignettes = TRUE)
devtools::install_github("cbroeckl/RAMClustR", build_vignettes = TRUE)
?findmass
library(RAMClustR)
?findmass
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::install_github('cbroeckl/ramclustR', build_vignette = TRUE)
detatch('package:RAMClustR')
detach('package:RAMClustR')
library(RAMClustR)
?findmass
