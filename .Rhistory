toa<- paste0(mgfdir, "/", nm, "_averagine.mgf")
fromb<-paste0(i, "/2018JUL03_003.raw/convex/2018JUL03_003.raw.mgf")
tob<- paste0(mgfdir, "/", nm, "_convex.mgf")
dida <- file.copy(froma, toa)
dida
dida <- file.copy(froma, toa)
dida
didb <- file.copy(fromb, tob)
didb
for(i in dirs) {
nm<-basename(i)
froma<-paste0(i, "/2018JUL03_003.raw/averagine/2018JUL03_003.raw.mgf")
toa<- paste0(mgfdir, "/", nm, "_averagine.mgf")
fromb<-paste0(i, "/2018JUL03_003.raw/convex/2018JUL03_003.raw.mgf")
tob<- paste0(mgfdir, "/", nm, "_convex.mgf")
dida <- file.copy(froma, toa)
didb <- file.copy(fromb, tob)
}
warnings()
i
dirs<-list.dirs(datadir, recursive = FALSE)
dirs<-list.dirs(datadir, recursive = FALSE)
for(i in dirs) {
nm<-basename(i)
froma<-paste0(i, "/2018JUL03_003.raw/averagine/2018JUL03_003.raw.mgf")
toa<- paste0(mgfdir, "/", nm, "_averagine.mgf")
fromb<-paste0(i, "/2018JUL03_003.raw/convex/2018JUL03_003.raw.mgf")
tob<- paste0(mgfdir, "/", nm, "_convex.mgf")
dida <- file.copy(froma, toa)
didb <- file.copy(fromb, tob)
}
setwd("R:/RSTOR-PMF/LabStaff/Broeckling/testdata/LC-MS_small_testdata")
list.files()
list.files("datasets")
library(xcms)
library(RAMClustR)
list.files("datasets")
load("datasets/xcmsFillPeaks.Rdata")
RC<-ramclustR(xset)
RC <- do.findmain(RC, writeMS = TRUE)
load("ExpDes.Rdata")
RC <- ramclustR(xset, ExpDes = ExpDes)
RC <- ramclustR(xset, ExpDes = ExpDes, MStag = "01.cdf", idMSMStag = "02.cdf", taglocation = "filepath")
RC <- do.findmain(RC, writeMS = TRUE)
install.packages("devtools", repos="http://cran.us.r-project.org", dependencies=TRUE)
library(devtools)
install_github("cbroeckl/RAMClustR", build_vignettes = TRUE, dependencies = TRUE)
install.packages("devtools", repos="http://cran.us.r-project.org", dependencies=TRUE)
library(devtools)
install_github("cbroeckl/RAMClustR", build_vignettes = TRUE, dependencies = TRUE)
library(Rdisop)
sessionInfo()
setwd("R:/RSTOR-PMF/LabStaff/Broeckling/testdata/LC-MS_small_testdata")
setwd("R:/RSTOR-PMF/LabStaff/Broeckling/testdata/LC-MS_small_testdata")
load("datasets/xcmsFillPeaks.Rdata")
load("ExpDes.Rdata")
RC <- ramclustR(xset, ExpDes = ExpDes, MStag = "01.cdf", idMSMStag = "02.cdf", taglocation = "filepath")
library(RAMClustR)
RC <- ramclustR(xset, ExpDes = ExpDes, MStag = "01.cdf", idMSMStag = "02.cdf", taglocation = "filepath")
spec <- new("Spectrum2", mz = c(100,200,300), intensity=c(60,60,60))
df <- data.frame(mz = RC$fmz, intensity = RC$msint)
cpds <- split(df, nonxcms_MSonly$featclus)
cpds <- split(df, RC$featclus)
spectra <- lapply(cpds, function(cpd)
new("Spectrum2", mz=cpd$mz, intensity=cpd$intensity))
spectra
str(spectra[[1]])
cpd
cpd()
spectra <- lapply(cpds, function(cpds)
new("Spectrum2", mz=cpd$mz, intensity=cpd$intensity))
spectra <- lapply(cpds, function(cpd)
new("Spectrum2", mz=cpd$mz, intensity=cpd$intensity))
spectra <- lapply(cpds, function(cpd)
new("Spectrum1", mz=cpd$mz, intensity=cpd$intensity))
str(spectra[[1]])
length(cpds)
str(spectra[[111]])
plot(spectra[[1]])
?Spectruma
?Spectrum1
plot.Spectrum(spectra[[1]])
MSnbase::plot.Spectrum(spectra[[1]])
plot(spectra)
plot(spectra[[1]])
plot(spectra[[1]]@mz, spectra[[1]]@intensity)
plot(spectra[[1]]@mz, spectra[[1]]@intensity, type = "h")
data(itraqdata)
library(MSnbase)
data(itraqdata)
plot(itraqdata[1:2], reporters = iTRAQ4)
str(itraqdata)
for(i in seq_along(RC$cmpd))
{
assign(RC$cmpd[[i]], spectra[[i]], envir=ex@assayData)
# which is a programmatic way of doing ex@assayData$C001 <- spectra[[1]] etc
}
ex <- new("MSnExp")
for(i in seq_along(RC$cmpd))
{
assign(RC$cmpd[[i]], spectra[[i]], envir=ex@assayData)
# which is a programmatic way of doing ex@assayData$C001 <- spectra[[1]] etc
}
ex <- new("MSnExp")
for(i in seq_along(RC$cmpd)) {
assign(RC$cmpd[[i]], spectra[[i]], envir=ex@assayData)
# which is a programmatic way of doing ex@assayData$C001 <- spectra[[1]] etc
}
ex
plot(ex)
plot(ex, 1:2)
plot(ex, 1)
plot(ex[[1]])
plot(ex[1:2])
plot(ex[])
plot(ex[1], full = TRUE)
plot(ex[[1]], full = TRUE)
plot(ex[[1]], full = TRUE)
## plotting experiments
plot(itraqdata[1:2], reporters = iTRAQ4)
plot(itraqdata[1:2], full = TRUE)
## plotting spectra
plot(itraqdata[[1]],reporters = iTRAQ4, full = TRUE)
ex[[1]]
ex[[100]]
names(ex)
str(ex)
ex@assayData
ex@assayData[[1]]
ex@assayData[1]
i<-
1
RC$cmpd[[i]]
RC$cmpd[i]
pectra[[i]]
spectra[[i]]
ex <- new("MSnExp")
for(i in seq_along(RC$cmpd)) {
assign(RC$cmpd[i], spectra[[i]], envir=ex@assayData)
# which is a programmatic way of doing ex@assayData$C001 <- spectra[[1]] etc
}
ex
ex@assayData
ex <- new("MSnExp")
ex
RC$cmpd[i]
spectra[[i]]
for(i in seq_along(RC$cmpd)) {
assign(RC$cmpd[i], spectra[[i]], envir=ex@assayData[[i]])
# which is a programmatic way of doing ex@assayData$C001 <- spectra[[1]] etc
}
for(i in seq_along(RC$cmpd)) {
assign(RC$cmpd[i], spectra[[i]], envir=ex@assayData[i])
# which is a programmatic way of doing ex@assayData$C001 <- spectra[[1]] etc
}
ex@assayData$[[RC$cmpd[i]]] <- spectra[[i]]
ex@assayData$RC$cmpd[i] <- spectra[[i]]
ex@assayData
ex@assayData[[RC$cmpd[i]]] <- spectra[[i]]
ex@assayData
spectra[[i]]
ex@assayData
df <- data.frame(mz = RC$fmz, intensity = RC$msint)
cpds <- split(df, RC$featclus)
spectra <- lapply(cpds, function(cpd)
new("Spectrum1", mz=cpd$mz, intensity=cpd$intensity))
ex <- new("MSnExp")
for(i in seq_along(RC$cmpd))
{
assign(RC$cmpd[[i]], spectra[[i]], envir=ex@assayData)
# which is a programmatic way of doing ex@assayData$C001 <- spectra[[1]] etc
}
ex@assayData
library(MSnbase)
data(itraqdata)
## plotting experiments
plot(itraqdata[1:2], reporters = iTRAQ4)
plot(itraqdata[1:2], full = TRUE)
system("sirius-console-64 -p orbitrap C:\\Sirius\\demo-data\\ms\\Kaempferol.ms")
system("sirius-console-64 -p orbitrap -o C:\\Sirius\\demo-data\\ms\\Kaempferol\\out C:\\Sirius\\demo-data\\ms\\Kaempferol.ms")
system("sirius-console-64 -p orbitrap -o C:\\Sirius\\demo-data\\ms\\Kaempferol\\out2 C:\\Sirius\\demo-data\\ms\\Kaempferol.ms")
system("sirius-console-64 -p orbitrap -o 'C:\\Sirius\\demo-data\\ms\\Kaempferol\\out2' 'C:\\Sirius\\demo-data\\ms\\Kaempferol.ms'")
system("C://Sirius//sirius-win64-4.0//sirius-console-64  -o C://Sirius//demo-data//ms//out2 -p orbitrap C://Sirius//demo-data//ms//Kaempferol.ms")
system("'C://Sirius//sirius-win64-4.0//sirius-console-64'  -o 'C://Sirius//demo-data//ms//out2' -p orbitrap 'C://Sirius//demo-data//ms//Kaempferol.ms'")
system("'C://Sirius//sirius-win64-4.0//sirius-console-64'  -o 'C://Sirius//demo-data//ms//out2' -p orbitrap 'C://Sirius//demo-data//ms//Kaempferol.ms'")
system("C://Sirius//sirius-win64-4.0//sirius-console-64.exe  -o C://Sirius//demo-data//ms//out2 -p orbitrap C://Sirius//demo-data//ms//Kaempferol.ms")
sink('test.bat')
cat("C://Sirius//sirius-win64-4.0//sirius-console-64.exe  -o C://Sirius//demo-data//ms//out2 -p orbitrap C://Sirius//demo-data//ms//Kaempferol.ms"))
cat("C://Sirius//sirius-win64-4.0//sirius-console-64.exe  -o C://Sirius//demo-data//ms//out2 -p orbitrap C://Sirius//demo-data//ms//Kaempferol.ms")
sink('test.bat')
getwd()
sink()
sink('test.bat')
cat("C://Sirius//sirius-win64-4.0//sirius-console-64.exe  -o C://Sirius//demo-data//ms//out2 -p orbitrap C://Sirius//demo-data//ms//Kaempferol.ms")
sink()
getwd()
sink()
sink()
sink('test.bat')
cat("C://Sirius//sirius-win64-4.0//sirius-console-64.exe  -o C://Sirius//demo-data//ms//out2 -p orbitrap C://Sirius//demo-data//ms//Kaempferol.ms")
sink()
getwd()
system("test.bat")
system("C://Sirius//sirius-win64-4.0//sirius-console-64.exe  -o C://Sirius//demo-data//ms//out2 -p orbitrap C://Sirius//demo-data//ms//Kaempferol.ms")
system("C://Sirius//sirius-win64-4.0//sirius-console-64.exe  -o C://Sirius//demo-data//ms//out2 -p orbitrap C://Sirius//demo-data//ms//Kaempferol.ms")
system("C://Sirius//sirius-win64-4.0//sirius-console-64 -p orbitrap --sirius C://Sirius//demo-data//ms//siriusworkspace.sirius --tree-timeout 20 --ppm-max 20 --candidates 10 --quiet --initial-compound-buffer 10 --max-compound-buffer 10 -F -o C://Sirius//demo-data//ms//out C://Sirius//demo-data//ms//Kaempferol.ms C://Sirius//demo-data//ms//Bicuculline.ms")
system("C://Sirius//sirius-win64-4.0//sirius-console-64 -p orbitrap --sirius C://Sirius//demo-data//ms//siriusworkspace.sirius --tree-timeout 20 --ppm-max 20 --candidates 10 --quiet --initial-compound-buffer 10 --max-compound-buffer 10 -F -o C://Sirius//demo-data//ms//out C://Sirius//demo-data//ms//Kaempferol.ms C://Sirius//demo-data//ms//Bicuculline.ms")
system("C://Sirius//sirius-win64-4.0//sirius-console-64 -p orbitrap --sirius C://Sirius//demo-data//ms//siriusworkspace.sirius --tree-timeout 20 --ppm-max 20 --candidates 10 --quiet --initial-compound-buffer 10 --max-compound-buffer 10 -F -o C://Sirius//demo-data//ms//out C://Sirius//demo-data//ms//Kaempferol.ms C://Sirius//demo-data//ms//Bicuculline.ms")
# construct this call with options:
sirius.directory <- choose.dir()
data.directory <- getwd()
data.directory
sirius.call <- list.files(sirius.director)
# construct this call with options:
sirius.directory <- choose.dir()
sirius.call <- list.files(sirius.directory)
sirius.call
sirius.directory
# construct this call with options:
sirius.directory <- choose.dir()
sirius.call <- list.files(sirius.directory)
sirius.call
sirius.call <- list.files(sirius.directory, recursive = TRUE)
sirius.call
list.files
?list.files
sirius.call <- list.files(sirius.directory, recursive = TRUE, full.names = TRUE)
sirius.call
grep(sirius.call, "sirius-console")
grep("sirius-console", sirius.call)
prog <- list.files(sirius.directory, recursive = TRUE, full.names = TRUE)
prog <- list.files(sirius.directory, recursive = TRUE, full.names = TRUE)
prog <- grep("sirius-console", sirius.call)
prog
prog <- list.files(sirius.directory, recursive = TRUE, full.names = TRUE)
prog <- prog[grep("sirius-console", sirius.call)]
prog
prog <- list.files(sirius.directory, recursive = TRUE, full.names = TRUE)
prog <- normalize.path(prog[grep("sirius-console", sirius.call)])
prog <- list.files(sirius.directory, recursive = TRUE, full.names = TRUE)
prog <- normalizePath(prog[grep("sirius-console", sirius.call)])
prog
instrument <- 'qtof'  ## 'qtof', 'orbitrap', 'fticr'
msfiles<- list.files(paste0(getwd(), "/spectra/ms"))
msfiles
msfiles<- normalizePath(list.files(paste0(getwd(), "/spectra/ms", full.names = TRUE)))
msfiles
list.files(paste0(getwd(), "/spectra/ms", full.names = TRUE))
msfiles<- normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE))
msfiles
out.directory <- paste0(getwd(), 'spectra/ms/')
out.directory
out.directory <- normalizePath(paste0(getwd(), 'spectra/ms/'))
getwd()
out.directory <- normalizePath(paste0(getwd(), '/spectra/ms/'))
out.directory
normalizePath(paste0(out.directory, "sirius_workspace.sirius"))
supressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius")))
suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius")))
tree.timeout <- 10
candidates <- 10
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates" candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory
)
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory
)
ppm <- 20
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory
)
call
msfiles
paste(msfiles, collapse = " ")
msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE)), collapse = " ")
msfiles
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory
msfiles
)
msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE))[1:3], collapse = " ")
msfiles
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory
msfiles
)
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
call
system(call)
suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius")))
out.directory
out.directory <- normalizePath(paste0(getwd(), '/spectra/ms/out'))
out.directory <- supressWarnings(normalizePath(paste0(getwd(), '/spectra/ms/out')))
out.directory <- suppressWarnings(normalizePath(paste0(getwd(), '/spectra/ms/out')))
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
system(call)
gc()
out.directory
instrument <- 'qtof'  ## 'qtof', 'orbitrap', 'fticr'
tree.timeout <- 10
out.directory <- suppressWarnings(normalizePath(paste0(getwd(), '/spectra/ms/out')))
ppm <- 20
candidates <- 10
prog <- list.files(sirius.directory, recursive = TRUE, full.names = TRUE)
prog <- normalizePath(prog[grep("sirius-console", sirius.call)])
msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE)), collapse = " ")
# msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE))[1:3], collapse = " ")
call<- paste(
prog,
"-p", instrument,
"--sirius", normalizePath(suppressWarnings(normalizePath(paste0(out.directory, "/sirius_workspace.sirius")))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE))[1:3], collapse = " ")
suppressWarnings(normalizePath(paste0(out.directory, "/sirius_workspace.sirius")))
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "/sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
call
system(call)
?system
system2(call)
system2(call)
?sysetm2
?system2
system2(command = call)
output<-system(command, intern = TRUE)
output<-system(call, intern = TRUE)
output
write(output, file = "sirius_log.log")
msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE)), collapse = " ")
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "/sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
output<-system(call, intern = TRUE)
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "/sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
msfiles
output<-system(call, intern = TRUE)
msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE))[1:3], collapse = " ")
msfiles
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "/sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
output<-system(call, intern = TRUE)
msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE)), collapse = " ")
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "/sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
output<-system(call, intern = TRUE)
call
msfiles<- paste(normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE))[1:30], collapse = " ")
call<- paste(
prog,
"-p", instrument,
"--sirius", suppressWarnings(normalizePath(paste0(out.directory, "/sirius_workspace.sirius"))),
"--tree-timeout", tree.timeout,
"--ppm-max",  ppm,
"--candidates", candidates,
"--quiet",
"--initial-compound-buffer 1",
"--max-compound-buffer 1",
"-F",
"-o", out.directory,
msfiles
)
output<-system(call, intern = TRUE)
output
msfiles<- normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE)))
msfiles<- normalizePath(list.files(paste0(getwd(), "/spectra/ms"), full.names = TRUE))
i<-1
msfiles[i]
