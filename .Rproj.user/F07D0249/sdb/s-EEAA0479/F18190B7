{
    "collab_server" : "",
    "contents" : "#' defineExperiment\n#'\n#' Create an Experimental Design R object for record-keeping and msp output\n#'\n#' @param csv logical or filepath.  If   csv = TRUE , csv template called \"ExpDes.csv\" will be written to your working directory.  you will fill this in manually, ensuring that when you save you retain csv format.  ramclustR will then read this file in and and format appropriately.  If csv = FALSE, a pop up window will appear (in windows, at leaset) asking for input.  If a character string with full path (and file name) to a csv file is given, this will allow you to read in a previously edited csv file. \n#' @return an Exp Des R object which will be used for record keeping and writing spectra data.  \n#' @author Corey Broeckling\n#' @export\n\n\ndefineExperiment<-function(csv = TRUE) {\n  LCMS <- data.frame(\"value\" = c(chrominst=\"\",\n                                 msinst=\"\",\n                                 column=\"\",\n                                 solvA=\"\",\n                                 solvB=\"\",\n                                 CE1=\"\",\n                                 CE2=\"\",\n                                 mstype=\"\",\n                                 msmode=\"\",\n                                 ionization=\"\",\n                                 colgas=\"\",\n                                 msscanrange=\"\",\n                                 conevolt=\"\",\n                                 MSlevs=1))\n  \n  GCMS <- data.frame(\"value\" = c(chrominst=\"\",\n                                 msinst=\"\",\n                                 column=\"\",\n                                 InletTemp=\"\",\n                                 TransferTemp=\"\",\n                                 mstype=\"\",\n                                 msmode=\"\",\n                                 ionization=\"\",\n                                 msscanrange=\"\",\n                                 scantime=\"\",\n                                 deriv=\"\",\n                                 MSlevs=1))\n  \n  Experiment<-data.frame(\"Value\" = rep(\"\", 5),\n                         \"Description\" = c(\"experiment name, no spaces\",\n                                           \"species name\",\n                                           \"sample type\",\n                                           \"individual and/or organizational affiliation\",\n                                           \"GC-MS or LC-MS\"), \n                         row.names = c(\"Experiment\",\n                             \"Species\",\n                             \"Sample\",\n                             \"Contributor\",\n                             \"platform\"))\n  \n  \n  if (is.logical(csv)) {\n    if(csv) {\n      out<-read.csv(paste(find.package(\"RAMClustR\"), \"/params/params.csv\", sep=\"\"), header=TRUE, check.names=FALSE)\n      write.csv(out, file=paste(getwd(), \"/ExpDes.csv\", sep=\"\"), row.names=FALSE)\n      readline(prompt=cat(\"A file called ExpDes.csv has been written to your working directorty:\",\n                          '\\n', '\\n',\n                          getwd(), \n                          '\\n', '\\n',\n                          \"please replace platform appropriate 'fill' cells with instrument and experiment\",\n                          '\\n', \"data and save file.  When complete, press [enter] to continue\"\n      ))\n      csv.in<-read.csv(file=paste(getwd(), \"/ExpDes.csv\", sep=\"\"), header=TRUE, check.names=FALSE)\n      design<-data.frame(\"value\" = csv.in[3:7,2], row.names = csv.in[3:7,1])\n      \n      instrument <- NULL\n      plat<-as.character(design[5,1])\n      if(grepl(\"LC-MS\", plat)) {\n        instrument<-\"LC-MS\"\n      }  \n      if( grepl(\"GC-MS\", plat )) {\n        instrument<-\"GC-MS\"\n      }  \n      if(!grepl(\"LC-MS\", plat ) & !grepl(\"GC-MS\", plat ) ) {\n        if(grepl('[Gg]',  substring(plat,1,1))) {\n          instrument<-\"GC-MS\"\n        }\n        if(grepl('[Ll]',  substring(plat,1,1))) {\n          instrument<-\"LC-MS\"\n        }\n      }\n      if(is.null(instrument)) {\n        stop(\"do not regonize instrument platform, please use either 'GC-MS' or 'LC-MS' \" )\n      }\n      \n      rowstart<-grep(instrument, csv.in[,1])+1\n      rowend<-grep(\"Mslevs\", csv.in[,1])\n      rowend<-rowend[which(rowend > rowstart)]\n      if(length(rowend)>1) {\n        rowend<-rowend[which.min((rowend - rowstart))]\n      }\n      instrument <- data.frame('value' = csv.in[rowstart:rowend,2], row.names = csv.in[rowstart:rowend,1])\n      ExpDes <- list(\"design\" = design, \"instrument\" = instrument)\n      \n    }  else {\n      \n      suppressWarnings( design<-edit(Experiment))\n      \n      plat<-as.character(design[5,1])\n      if(grepl(\"LC-MS\", plat)) {\n        instrument<-\"LC-MS\"\n      }  \n      if( grepl(\"GC-MS\", plat )) {\n        instrument<-\"GC-MS\"\n      }  \n      if(!grepl(\"LC-MS\", plat ) & !grepl(\"GC-MS\", plat ) ) {\n        if(grepl('[Gg]',  substring(plat,1,1))) {\n          instrument<-\"GC-MS\"\n        }\n        if(grepl('[Ll]',  substring(plat,1,1))) {\n          instrument<-\"LC-MS\"\n        }\n      }\n      if(is.null(instrument)) {\n        stop(\"do not regonize instrument platform, please use either 'GC-MS' or 'LC-MS' \" )\n      }\n      \n      if(instrument == \"LC-MS\") platform<-LCMS\n      if(instrument == \"GC-MS\") platform<-GCMS\n      \n      instrument <- platform\n      \n      suppressWarnings( instrument<-edit(instrument))\n      \n      ExpDes<-list(\"design\" = design, \"instrument\" = instrument)\n\n    }\n    \n  } else  {\n    if(file.exists(csv)) {\n      csv.in <- read.csv(csv, header=TRUE, check.names=FALSE)\n      design<-data.frame(\"value\" = csv.in[3:7,2], row.names = csv.in[3:7,1])\n      \n      instrument <- NULL\n      plat<-as.character(design[5,1])\n      if(grepl(\"LC-MS\", plat)) {\n        instrument<-\"LC-MS\"\n      }  \n      if( grepl(\"GC-MS\", plat )) {\n        instrument<-\"GC-MS\"\n      }  \n      if(!grepl(\"LC-MS\", plat ) & !grepl(\"GC-MS\", plat ) ) {\n        if(grepl('[Gg]',  substring(plat,1,1))) {\n          instrument<-\"GC-MS\"\n        }\n        if(grepl('[Ll]',  substring(plat,1,1))) {\n          instrument<-\"LC-MS\"\n        }\n      }\n      if(is.null(instrument)) {\n        stop(\"do not regonize instrument platform, please use either 'GC-MS' or 'LC-MS' \" )\n      }\n      \n      rowstart<-grep(instrument, csv.in[,1])+1\n      rowend<-grep(\"Mslevs\", csv.in[,1])\n      rowend<-rowend[which(rowend > rowstart)]\n      if(length(rowend)>1) {\n        rowend<-rowend[which.min((rowend - rowstart))]\n      }\n      instrument <- data.frame('value' = csv.in[rowstart:rowend,2], row.names = csv.in[rowstart:rowend,1])\n      ExpDes <- list(\"design\" = design, \"instrument\" = instrument)\n      \n    }\n  }\n  \n  return(ExpDes)\n}\n",
    "created" : 1506094795731.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3695105347",
    "id" : "F18190B7",
    "lastKnownWriteTime" : 1506113291,
    "last_content_update" : 1506113291459,
    "path" : "~/GitHub/RAMClustR/R/Params.R",
    "project_path" : "R/Params.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}